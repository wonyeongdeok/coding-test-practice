/*
print: CONTEST_ID, HACKER_ID, NAME, TOTAL_SUBMISSIONS, TOTAL_ACCEPTED_SUBMISSIONS, TOTAL_VIEWS, TOTAL_UNIQUE_VIEWS
condition:
 - each contest
 - exclude the contest from the result if all four sums are 0.
order
 - CONTEST_ID
*/

SELECT
    CN.CONTEST_ID,
    CN.HACKER_ID,
    CN.NAME,
    IFNULL(SUM(SU.TOTAL_SUBMISSIONS), 0),
    IFNULL(SUM(SU.TOTAL_ACCEPTED_SUBMISSIONS), 0),
    IFNULL(SUM(VI.TOTAL_VIEWS), 0),
    IFNULL(SUM(VI.TOTAL_UNIQUE_VIEWS), 0)
FROM
    CONTESTS AS CN
JOIN
    COLLEGES AS CL ON CN.CONTEST_ID = CL.CONTEST_ID
JOIN
    CHALLENGES AS CH ON CL.COLLEGE_ID = CH.COLLEGE_ID
LEFT JOIN (
    SELECT
        CHALLENGE_ID,
        IFNULL(SUM(TOTAL_VIEWS), 0) AS TOTAL_VIEWS,
        IFNULL(SUM(TOTAL_UNIQUE_VIEWS), 0) AS TOTAL_UNIQUE_VIEWS
    FROM
        VIEW_STATS
    GROUP BY
        CHALLENGE_ID) AS VI ON CH.CHALLENGE_ID = VI.CHALLENGE_ID
LEFT JOIN (
    SELECT
        CHALLENGE_ID,
        IFNULL(SUM(TOTAL_SUBMISSIONS), 0) AS TOTAL_SUBMISSIONS,
        IFNULL(SUM(TOTAL_ACCEPTED_SUBMISSIONS), 0) AS TOTAL_ACCEPTED_SUBMISSIONS
    FROM
        SUBMISSION_STATS
    GROUP BY
        CHALLENGE_ID) AS SU ON CH.CHALLENGE_ID = SU.CHALLENGE_ID
GROUP BY
    CN.CONTEST_ID,
    CN.HACKER_ID,
    CN.NAME
HAVING
    IFNULL(SUM(SU.TOTAL_SUBMISSIONS), 0)
    + IFNULL(SUM(SU.TOTAL_ACCEPTED_SUBMISSIONS), 0)
    + IFNULL(SUM(VI.TOTAL_VIEWS), 0)
    + IFNULL(SUM(VI.TOTAL_UNIQUE_VIEWS), 0) > 0
ORDER BY
    CN.CONTEST_ID;